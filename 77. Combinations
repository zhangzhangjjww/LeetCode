Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]


class Solution {
public:
    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>> re;
        if(n<=0||k>n) {
            return re;
        }
        if(n==1) {
            vector<int> tmp;
            tmp.push_back(1);
            re.push_back(tmp);
            return re;
        }
        vector<int> vol;
        for(int i=1;i!=n+1;++i) {
            vol.push_back(i);
        }
        vector<int> val;
        solve(re,val,vol,k);
        return re;
    }
    void solve(vector<vector<int>>& re,vector<int> val,vector<int> vol,int k) {
        if(k==0) {
            re.push_back(val);
        }
        else {
            for(int i=0;i!=vol.size();++i) {
                vector<int> val2=val;
                val2.push_back(vol[i]);
                vector<int> vol2;
                for(int j=i+1;j<vol.size();++j) {
                    vol2.push_back(vol[j]);
                }
                solve(re,val2,vol2,k-1);
            }
        }
    }
};
