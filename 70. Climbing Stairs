You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

class Solution {
public:
    int climbStairs(int n) {
        int* re=new int[n+1];
        re[0]=1;
        re[1]=1;
        int i=2;
        while(i<n+1) {
            re[i]=re[i-1]+re[i-2];
            ++i;
        }
        int sum=re[n];
        delete [] re;
        return sum;
    }
};
