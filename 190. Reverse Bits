Reverse bits of a given 32 bits unsigned integer.

For example, given input 43261596 (represented in binary as 00000010100101000001111010011100), return 964176192 (represented in binary as 00111001011110000010100101000000).

Follow up:
If this function is called many times, how would you optimize it?

Related problem: Reverse Integer



class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
        vector<int> v;
        for(int i=0;i!=32;++i) {
            v.push_back((n>>i)&1);
        }
        int tmp=0;
        int count=0;
        for(int i=v.size()-1;i>-1;--i) {
            tmp=tmp|(v[i]<<count);
            ++count;
        }
        return tmp;
    }
};
