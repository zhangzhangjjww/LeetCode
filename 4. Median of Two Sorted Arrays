here are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

Example 1:
nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:
nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5


class Solution {
public:
    double find_rank(vector<int>& n1,vector<int> n2,int start1,int start2,int k) {
        if(start1>=n1.size()) {
            return n2[start2+k-1];
        }
        if(start2>=n2.size()) {
            return n1[start1+k-1];
        }
        int rank=k/2;
        if(rank==0) {
            if(n1[start1]<=n2[start2]) {
                return n1[start1];
            }
            else {
                return n2[start2];
            }
        }
        if(rank>n1.size()) {
            return find_rank(n1,n2,start1,start2+rank,k-rank);
        }
        else {
            if(rank>n2.size()) {
            return find_rank(n1,n2,start1+rank,start2,k-rank);
            }
            else {
                if(n1[start1+rank-1]<n2[start2+rank-1]) {
                    return find_rank(n1,n2,start1+rank,start2,k-rank);
                }
                else {
                    return find_rank(n1,n2,start1,start2+rank,k-rank);
                }
            }
        }
    }
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int sum=nums1.size()+nums2.size();
        if(sum&1) {
            return find_rank(nums1,nums2,0,0,(sum)/2+1);
        }
        else {
            return (find_rank(nums1,nums2,0,0,(sum)/2)+find_rank(nums1,nums2,0,0,(sum)/2+1))/2.0;
        }
    }
};
