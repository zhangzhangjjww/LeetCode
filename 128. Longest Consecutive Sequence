Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.

Your algorithm should run in O(n) complexity.

排序的话至少要O(nlgn) 的复杂度。O(n)的复杂度，目前只找到了使用hash来解决的方案，add, remove, contains 等方法的复杂度都是 O(1)，因此两次遍历的操作复杂度为 O(n)。


class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        if(nums.size()==0) {
            return 0;
        }
        map<int,int> m;
        for(int i=0;i!=nums.size();++i) {
            if(m.count(nums[i])==0) {
                m[nums[i]]=0;
            }
        }
        int max=1;
        for(int i=0;i!=nums.size();++i) {
            if(m[nums[i]]==0) {
                int left=nums[i]-1;
                int right=nums[i]+1;
                int tmp=1;
                m[nums[i]]++;
                while(m.count(left)) {
                    m[left]++;
                    --left;
                    ++tmp;
                }
                while(m.count(right)) {
                    m[right]++;
                    ++right;
                    ++tmp;
                }
                if(tmp>max) {
                    max=tmp;
                }
            }
        }
        return max;
    }
};
