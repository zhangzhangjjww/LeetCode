Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?


class Solution {
public:
    vector<int> getRow(int rowIndex) {
        if(rowIndex<0) {
            vector<int> re;
            return re;
        }
        vector<int> re(rowIndex+1,1);
        if(rowIndex<=1) {
            return re;
        }
        for(int i=1;i!=rowIndex;++i) {
            vector<int> tmp=re;
            for(int j=1;j!=i+1;++j) {
                re[j]=tmp[j]+tmp[j-1];
            }
        }
        return re;
    }
};
