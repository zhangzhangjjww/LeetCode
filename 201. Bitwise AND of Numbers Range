Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive.

For example, given the range [5, 7], you should return 4.


class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        if(m==0) {
            return 0;
        }
        if(m==n) {
            return m;
        }
        if(n/m>=2) {
            return 0;
        }
        for(int i=0;i!=32;++i) {
            if(m<pow(2,i)&&n>pow(2,i)) {
                return 0;
            }
            if(m<pow(2,i)&&n<pow(2,i)) {
                return pow(2,i-1)+rangeBitwiseAnd(m-pow(2,i-1),n-pow(2,i-1));
            }
            if(m==pow(2,i)) {
                return pow(2,i);
            }
            if(n==pow(2,i)) {
                return 0;
            }
        }
    }
};
