Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

class Solution {
public:
    bool isValid(string s) {
        if(s.empty()) {
            return true;
        }
        if(s.size()%2==1) {
            return false;
        }
        stack<char> re;
        if(s[0]==')'||s[0]==']'||s[0]=='}') {
            return false;
        }
        else {
            re.push(s[0]);
        }
        for(int i=1;i!=s.size();++i) {
            if(s[i]=='('||s[i]=='['||s[i]=='{') {
                re.push(s[i]);
            }
            else {
                if(s[i]==')') {
                    char tmp=re.top();
                    if(tmp=='(') {
                        re.pop();
                    }
                    else {
                        return false;
                    }
                }
                else {
                    if(s[i]==']') {
                        char tmp=re.top();
                        if(tmp=='[') {
                            re.pop();
                        }
                        else {
                            return false;
                        }
                    }
                    else {
                        if(s[i]=='}') {
                            char tmp=re.top();
                            if(tmp=='{') {
                                re.pop();
                            }
                            else {
                                return false;
                            }
                        }
                    }
                }
            }
        }
        if(re.empty()) {
            return true;
        }
        else {
            return false;
        }
    }
};
