Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.


class Solution {
public:
    int findMin(vector<int>& nums) {
       int pos=pivot(nums,0,nums.size()-1);
       if(pos==nums.size()-1) {
           return nums[0];
       }
       else {
           return nums[pos+1];
       }
    }
    int pivot(vector<int>& nums,int p,int r) {
        if(p<=r) {
            int q=(p+r)/2;
            if(q==0) {
                if(nums[0]>nums[1]) {
                    return 0;
                }
                else {
                    return pivot(nums,q+1,r);
                }
            }
            else {
                if(q==nums.size()-1) {
                    return q;
                }
                else {
                    if(nums[q]>nums[q-1]&&nums[q]>nums[q+1]) {
                        return q;
                    }
                    else {
                        if(nums[q]>nums[0]) {
                            return pivot(nums,q+1,r);
                        }
                        else {
                            return pivot(nums,p,q-1);
                        }
                    }
                }
            }
        }
        else {
            return nums.size()-1;
        }
    }
};
