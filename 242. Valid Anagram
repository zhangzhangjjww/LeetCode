Given two strings s and t, write a function to determine if t is an anagram of s.

For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.

Note:
You may assume the string contains only lowercase alphabets.

Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?

class Solution {
public:
    bool isAnagram(string s, string t) {
        map<char,int> m1,m2;
        for(int i=0;i!=26;++i) {
            m1[char('a'+i)]=0;
            m2[char('a'+i)]=0;
        }
        for(int i=0;i!=s.size();++i) {
            ++m1[s[i]];
        }
        for(int i=0;i!=t.size();++i) {
            ++m2[t[i]];
        }
        for(int i=0;i!=26;++i) {
            if(m1[char('a'+i)]!=m2[char('a'+i)]) {
                return false;
            }
        }
        return true;
    }
};
