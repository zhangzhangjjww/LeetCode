Given an integer, convert it to a roman numeral.

Input is guaranteed to be within the range from 1 to 3999.

class Solution {
public:
    string intToRoman(int num) {
        string re;
        int thousand=num/1000;
        switch(thousand) {
            case 3:
            re+="MMM";
            break;
            case 2:
            re+="MM";
            break;
            case 1:
            re+="M";
            break;
        }
        num=num-thousand*1000;
        int hundred=num/100;
        switch(hundred) {
            case 9:
            re+="CM";
            break;
            case 8:
            re+="DCCC";
            break;
            case 7:
            re+="DCC";
            break;
            case 6:
            re+="DC";
            break;
            case 5:
            re+="D";
            break;
            case 4:
            re+="CD";
            break;
            case 3:
            re+="CCC";
            break;
            case 2:
            re+="CC";
            break;
            case 1:
            re+="C";
            break;
        }
        num=num-hundred*100;
        int ten=num/10;
        switch(ten) {
            case 9:
            re+="XC";
            break;
            case 8:
            re+="LXXX";
            break;
            case 7:
            re+="LXX";
            break;
            case 6:
            re+="LX";
            break;
            case 5:
            re+="L";
            break;
            case 4:
            re+="XL";
            break;
            case 3:
            re+="XXX";
            break;
            case 2:
            re+="XX";
            break;
            case 1:
            re+="X";
            break;
        }
        int digit=num%10;
        switch(digit) {
            case 9:
            re+="IX";
            break;
            case 8:
            re+="VIII";
            break;
            case 7:
            re+="VII";
            break;
            case 6:
            re+="VI";
            break;
            case 5:
            re+="V";
            break;
            case 4:
            re+="IV";
            break;
            case 3:
            re+="III";
            break;
            case 2:
            re+="II";
            break;
            case 1:
            re+="I";
            break;
        }
        return re;
    }
};
