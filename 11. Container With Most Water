Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.


两个指针从两端开始向中间靠拢，如果左端线段短于右端，那么左端右移，反之右端左移，知道左右两端移到中间重合，记录这个过程中每一次组成木桶的容积，返回其中最大的。
左端线段L小于右端线段R时，我们把L右移，这时舍弃的是L与右端其他线段（R-1, R-2, ...）组成的木桶，这些木桶是没必要判断的，因为这些木桶的容积肯定都没有L和R组成的木桶容积大。


lass Solution {
public:
    int square(vector<int>& v,int i,int j) {
        int sum=1;
        if(v[i]<=v[j]) {
            return v[i]*(j-i);
        }
        else {
            return v[j]*(j-i);
        }
    }
    int maxArea(vector<int>& height) {
        int n=height.size();
        if(n==2) {
            return square(height,0,1);
        }
        int i=0;int j=height.size()-1;
        int re=square(height,0,height.size()-1);
        while(i<j) {
            if(height[i]<=height[j]) {
                if(re<square(height,i+1,j)) {
                    re=square(height,i+1,j);
                }
                ++i;
            }
            else {
                if(re<square(height,i,j-1)) {
                    re=square(height,i,j-1);
                }
                --j;
            }
        }
        return re;
    }
};
