Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head==NULL) {
            return head;
        }
        ListNode* pre=NULL,*p=head;
        int key;
        while(p) {
            if(p==head) {
                pre=p;
                key=p->val;
                p=p->next;
            }
            else {
                if(p->val==key) {
                    while(p&&p->val==key) {
                        p=p->next;
                    }
                    pre->next=p;
                    if(p) {
                        pre=p;
                        key=p->val;
                        p=p->next;
                    }
                }
                else {
                    pre=p;
                    key=p->val;
                    p=p->next;
                }
            }
        }
        return head;
    }
};
