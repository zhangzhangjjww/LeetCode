Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:
You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively.

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        if(n==0) {
            return;
        }
        else {
            if(m==0) {
                nums1=nums2;
                return;
            }
        }
        int* L=new int[m+1];
        int* R=new int [n+1];
        for(int i=0;i!=m;++i) {
            L[i]=nums1[i];
        }
        for(int i=0;i!=n;++i) {
            R[i]=nums2[i];
        }
        L[m]=numeric_limits<int>::max();
        R[n]=numeric_limits<int>::max();
        int i=0,j=0;
        for(int k=0;k!=m+n;++k) {
            if(L[i]<=R[j]) {
                nums1[k]=L[i];
                ++i;
            }
            else {
                nums1[k]=R[j];
                ++j;
            }
        }
        delete [] L;
        delete [] R;
    }
};
