Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Examples:
pattern = "abba", str = "dog cat cat dog" should return true.
pattern = "abba", str = "dog cat cat fish" should return false.
pattern = "aaaa", str = "dog cat cat dog" should return false.
pattern = "abba", str = "dog dog dog dog" should return false.
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.


class Solution {
public:
    bool wordPattern(string pattern, string str) {
        vector<int> v1;map<char,int> m1;int number=0;
        for(int i=0;i!=pattern.size();++i) {
            if(m1.count(pattern[i])==0) {
                m1[pattern[i]]=number;
                ++number;
            }
            v1.push_back(m1[pattern[i]]);
        }
        map<string,int> m2;
        vector<int> v2;
        number=0;
        string s;
        for(int i=0;i!=str.size();++i) {
            if(str[i]!=' ') {
                s+=str[i];
            }
            else {
                if(m2.count(s)==0) {
                    m2[s]=number;
                    ++number;
                }
                v2.push_back(m2[s]);
                string tmp;
                s=tmp;
            }
        }
        if(s.size()!=0) {
            if(m2.count(s)==0) {
                m2[s]=number;
            }
            v2.push_back(m2[s]);
        }
        return v1==v2;
    }
};
