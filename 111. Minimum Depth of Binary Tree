Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root==NULL) {
            return 0;
        }
        return solve(root);
    }
    int solve(TreeNode* p) {
        if(p->left==NULL&&p->right==NULL) {
            return 1;
        }
        else {
            int key1=numeric_limits<int>::max();
            int key2=numeric_limits<int>::max();
            if(p->left!=0) {
                key1=solve(p->left)+1;
            }
            if(p->right!=0) {
                key2=solve(p->right)+1;
            }
            return key1>key2?key2:key1;
        }
    }
};
