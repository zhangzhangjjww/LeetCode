Given a binary tree, flatten it to a linked list in-place.

For example,
Given

         1
        / \
       2   5
      / \   \
     3   4   6
The flattened tree should look like:
   1
    \
     2
      \
       3
        \
         4
          \
           5
            \
             6
             
             
             /**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if(root==NULL) {
            return;
        }
        solve(root);
    }
    void solve(TreeNode* p) {
        if(p->left==NULL&&p->right==NULL) {
            return;
        }
        else {
            if(p->left!=NULL) {
                solve(p->left);
            }
            if(p->right!=NULL) {
                solve(p->right);
            }
            TreeNode* tmp=p->left;
            while(tmp&&tmp->right!=NULL) {
                tmp=tmp->right;
            }
            if(tmp!=NULL) {
                tmp->right=p->right;
                p->right=p->left;
                p->left=NULL;
            }
        }
    }
};
