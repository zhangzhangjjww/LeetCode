Given a binary tree, return the preorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3},
   1
    \
     2
    /
   3
return [1,2,3].

Note: Recursive solution is trivial, could you do it iteratively?


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> re;
        if(root==NULL) {
            return re;
        }
        solve(re,root);
        return re;
    }
    void solve(vector<int>& re,TreeNode* p) {
        if(p==NULL) {
            return;
        }
        else {
            re.push_back(p->val);
            solve(re,p->left);
            solve(re,p->right);
        }
    }
};
