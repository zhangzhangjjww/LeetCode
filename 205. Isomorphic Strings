Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

For example,
Given "egg", "add", return true.

Given "foo", "bar", return false.

Given "paper", "title", return true.

Note:
You may assume both s and t have the same length.



class Solution {
public:
    bool isIsomorphic(string s, string t) {
        if(s.size()==0) {
            return true;
        }
        map<char,char> m;
        for(int i=0;i!=s.size();++i) {
            if(m.count(s[i])==0) {
                m[s[i]]=t[i];
            }
            else {
                if(m[s[i]]!=t[i]) {
                    return false;
                }
            }
        }
        map<char,int> m2;
        for(map<char,char>::iterator i=m.begin();i!=m.end();++i) {
            if(m2.count(i->second)==0) {
                m2[i->second]=1;
            }
            else {
                return false;
            }
        }
        return true;
    }
};
